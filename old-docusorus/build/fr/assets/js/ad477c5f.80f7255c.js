"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5788],{2562:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>h,default:()=>o,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(4848),i=t(8453);const s={sidebar_position:7,title:"Highlight"},h="Highlight plugin",l={id:"ui/sse-pdf-viewer/plugin/highlight",title:"Highlight",description:"The highlight plugin allows to select particular texts in the document and highlight them.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/ui/sse-pdf-viewer/plugin/highlight.md",sourceDirName:"ui/sse-pdf-viewer/plugin",slug:"/ui/sse-pdf-viewer/plugin/highlight",permalink:"/fr/docs/ui/sse-pdf-viewer/plugin/highlight",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Highlight"},sidebar:"tutorialSidebar",previous:{title:"Get File",permalink:"/fr/docs/ui/sse-pdf-viewer/plugin/get-file"},next:{title:"Locale Switcher",permalink:"/fr/docs/ui/sse-pdf-viewer/plugin/locale-switcher"}},d={},c=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"1. Import the plugin and styles",id:"1-import-the-plugin-and-styles",level:3},{value:"2. Create the plugin instance",id:"2-create-the-plugin-instance",level:3},{value:"3. Register the plugin",id:"3-register-the-plugin",level:3},{value:"HighlightArea data structure",id:"highlightarea-data-structure",level:2},{value:"SelectionData data structure",id:"selectiondata-data-structure",level:2},{value:"renderHighlightTarget",id:"renderhighlighttarget",level:2},{value:"renderHighlightContent",id:"renderhighlightcontent",level:2},{value:"renderHighlights",id:"renderhighlights",level:2},{value:"Display notes in a sidebar",id:"display-notes-in-a-sidebar",level:2},{value:"Jump to a highlight area when clicking a note",id:"jump-to-a-highlight-area-when-clicking-a-note",level:2},{value:"Jump to a note in sidebar when clicking its highlight area",id:"jump-to-a-note-in-sidebar-when-clicking-its-highlight-area",level:2},{value:"Integrate with Default Layout plugin",id:"integrate-with-default-layout-plugin",level:2},{value:"Open the tab when clicking a highlight",id:"open-the-tab-when-clicking-a-highlight",level:2},{value:"Clear the notes when opening other document",id:"clear-the-notes-when-opening-other-document",level:2},{value:"See also",id:"see-also",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"highlight-plugin",children:"Highlight plugin"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"highlight"})," plugin allows to select particular texts in the document and highlight them."]}),"\n",(0,r.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"> npm install @sse-ui/pdf-highlight\n"})}),"\n",(0,r.jsx)(n.p,{children:"OR"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"> yarn add @sse-ui/pdf-highlight\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.h3,{id:"1-import-the-plugin-and-styles",children:"1. Import the plugin and styles"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { highlightPlugin } from "@sse-ui/pdf-highlight";\r\n\r\n// Import styles\r\nimport "@sse-ui/pdf-highlight/lib/styles/index.css";\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-create-the-plugin-instance",children:"2. Create the plugin instance"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const highlightPluginInstance = highlightPlugin(props?: HighlightPluginProps);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"highlightPlugin()"})," function takes a ",(0,r.jsx)(n.code,{children:"HighlightPluginProps"})," parameter that consists of the following properties:\r\n",(0,r.jsx)(n.em,{children:"(? denotes an optional property)"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"PROPERTY"}),(0,r.jsx)(n.th,{children:"TYPE"}),(0,r.jsx)(n.th,{children:"DESCRIPTION"}),(0,r.jsx)(n.th,{children:"FROM"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"renderHighlightTarget?"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RenderHighlightTargetProps => ReactElement"})}),(0,r.jsx)(n.td,{children:"Render the element displayed after you select texts. It can be a form that allows user to add a note about selected text"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"renderHighlightContent?"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RenderHighlightContentProps => ReactElement"})}),(0,r.jsx)(n.td,{children:"Render the highlighted texts before you are going to do something with the selected text"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"renderHighlights?"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RenderHighlightsProps => ReactElement"})}),(0,r.jsx)(n.td,{children:"Render the texts that are highlighted"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"trigger?"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Trigger"})}),(0,r.jsx)(n.td,{children:"Indicate when the highlighting is triggered"}),(0,r.jsx)(n.td,{children:"1.0.0"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["There are two possible values for the ",(0,r.jsx)(n.code,{children:"trigger"})," option:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { Trigger } from "@sse-ui/pdf-highlight";\r\n\r\nconst highlightPluginInstance = highlightPlugin({\r\n  trigger: Trigger.None,\r\n});\n'})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"VALUE"}),(0,r.jsx)(n.th,{children:"DESCRIPTION"}),(0,r.jsx)(n.th,{children:"FROM"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Trigger.TextSelection"})}),(0,r.jsx)(n.td,{children:"Show the target after users select text. It is the default value"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Trigger.None"})}),(0,r.jsx)(n.td,{children:"Doesn't trigger the highlight."}),(0,r.jsx)(n.td,{children:"1.0.0"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["In the next sections, we will go through each property to demonstrate a completed example of highlighting texts.\r\nThe plugin instance ",(0,r.jsx)(n.code,{children:"highlightPluginInstance"})," provides the following property:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"PROPERTY"}),(0,r.jsx)(n.th,{children:"TYPE"}),(0,r.jsx)(n.th,{children:"DESCRIPTION"}),(0,r.jsx)(n.th,{children:"FROM"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"switchTrigger"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Switch the trigger mode"}),(0,r.jsx)(n.td,{children:"1.0.0"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"3-register-the-plugin",children:"3. Register the plugin"}),"\n",(0,r.jsxs)(n.p,{children:["Register the ",(0,r.jsx)(n.code,{children:"highlight"})," plugin instance:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"<Viewer plugins={[highlightPluginInstance]} />\n"})}),"\n",(0,r.jsx)(n.h2,{id:"highlightarea-data-structure",children:"HighlightArea data structure"}),"\n",(0,r.jsx)(n.p,{children:"Imagine that when user selects multiple texts in the PDF document. Each selected text will be represented by its bounding rectangle:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface HighlightArea {\r\n  height: number;\r\n  left: number;\r\n  pageIndex: number;\r\n  top: number;\r\n  width: number;\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"top"})," and ",(0,r.jsx)(n.code,{children:"left"})," properties are the distances from the top-left corner of the bounding rectangle to the top and left side of pages. While ",(0,r.jsx)(n.code,{children:"height"})," and ",(0,r.jsx)(n.code,{children:"width"})," properties are the height and width of the rectangle. All those properties are the number of percentages, not the absolute values in pixels.\r\nThe ",(0,r.jsx)(n.code,{children:"pageIndex"})," property is the index of page that the selected text belongs to.\r\nThe ",(0,r.jsx)(n.code,{children:"HighlightArea"})," interface is available as following"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { HighlightArea } from "@sse-ui/pdf-highlight";\n'})}),"\n",(0,r.jsx)(n.h2,{id:"selectiondata-data-structure",children:"SelectionData data structure"}),"\n",(0,r.jsxs)(n.p,{children:["Each page of the document consists of different layers including canvas, annotations, texts. The text layer is a ",(0,r.jsx)(n.code,{children:"div"})," element that renders all texts in the page.\r\nIt is constructed by multiple ",(0,r.jsx)(n.code,{children:"span"})," (or ",(0,r.jsx)(n.code,{children:"div"}),") elements. In order to store exactly the text user selects, we need the ",(0,r.jsx)(n.code,{children:"SelectionData"})," data structure:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface SelectionData {\r\n  startPageIndex: number;\r\n  startOffset: number;\r\n  startDivIndex: number;\r\n  endPageIndex: number;\r\n  endOffset: number;\r\n  endDivIndex: number;\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"startPageIndex"})," is the index of starting page. The ",(0,r.jsx)(n.code,{children:"startOffset"})," property is the index of starting character in the starting text element which is determined by the ",(0,r.jsx)(n.code,{children:"startDivIndex"})," property.\r\nThe same definitions are used for the ",(0,r.jsx)(n.code,{children:"endPageIndex"}),", ",(0,r.jsx)(n.code,{children:"endOffset"})," and ",(0,r.jsx)(n.code,{children:"endDivIndex"})," properties.\r\nThe ",(0,r.jsx)(n.code,{children:"SelectionData"})," interface is available as following"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { SelectionData } from "@sse-ui/pdf-highlight";\n'})}),"\n",(0,r.jsx)(n.p,{children:"Before diving in a completed example, let's assume that we are going to add note for selected texts. Each note has the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface Note {\r\n  // The generated unique identifier\r\n  id: number;\r\n  // The note content\r\n  content: string;\r\n  // The list of highlight areas\r\n  highlightAreas: HighlightArea[];\r\n  // The selected text\r\n  quote: string;\r\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"renderhighlighttarget",children:"renderHighlightTarget"}),"\n",(0,r.jsxs)(n.p,{children:["This prop is used to render a custom target (a button, for example) that is used to trigger the form for adding a note.\r\n",(0,r.jsx)(n.code,{children:"renderHighlightTarget"})," provides the following properties:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"PROPERTY"}),(0,r.jsx)(n.th,{children:"TYPE"}),(0,r.jsx)(n.th,{children:"DESCRIPTION"}),(0,r.jsx)(n.th,{children:"FROM"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"cancel()"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Cancel the selection"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"highlightAreas"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HighlightArea[]"})}),(0,r.jsx)(n.td,{children:"The list of highlight areas"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectedText"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"The selected text"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectionData"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SelectionData"})}),(0,r.jsx)(n.td,{children:"The selection data"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectionRegion"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HighlightArea"})}),(0,r.jsx)(n.td,{children:"The area represents the entire selected region"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"toggle()"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Switch to the hightlighting state"}),(0,r.jsx)(n.td,{children:"1.0.0"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"The following sample code displays a button after user selects text in the document:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import {\r\n  highlightPlugin,\r\n  MessageIcon,\r\n  RenderHighlightTargetProps,\r\n} from "@sse-ui/pdf-highlight";\r\nimport { Button, Position, Tooltip } from "@sse-ui/pdf-core";\r\n\r\nconst renderHighlightTarget = (props: RenderHighlightTargetProps) => (\r\n  <div\r\n    style={{\r\n      background: "#eee",\r\n      display: "flex",\r\n      position: "absolute",\r\n      left: `${props.selectionRegion.left}%`,\r\n      top: `${props.selectionRegion.top + props.selectionRegion.height}%`,\r\n      transform: "translate(0, 8px)",\r\n    }}\r\n  >\r\n    <Tooltip\r\n      position={Position.TopCenter}\r\n      target={\r\n        <Button onClick={props.toggle}>\r\n          <MessageIcon />\r\n        </Button>\r\n      }\r\n      content={() => <div style={{ width: "100px" }}>Add a note</div>}\r\n      offset={{ left: 0, top: -8 }}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst highlightPluginInstance = highlightPlugin({\r\n  renderHighlightTarget,\r\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"renderhighlightcontent",children:"renderHighlightContent"}),"\n",(0,r.jsxs)(n.p,{children:["This prop is used to render an element which is shown after user switches to the highlighting mode. Technically, it's called after the ",(0,r.jsx)(n.code,{children:"renderHighlightTarget"}),"'s ",(0,r.jsx)(n.code,{children:"toggle()"})," is invoked.\r\n",(0,r.jsx)(n.code,{children:"renderHighlightContent"})," provides the following properties:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"PROPERTY"}),(0,r.jsx)(n.th,{children:"TYPE"}),(0,r.jsx)(n.th,{children:"DESCRIPTION"}),(0,r.jsx)(n.th,{children:"FROM"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"cancel()"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Cancel the selection"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"highlightAreas"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HighlightArea[]"})}),(0,r.jsx)(n.td,{children:"The list of highlight areas"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectedText"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"The selected text"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectionData"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"SelectionData"})}),(0,r.jsx)(n.td,{children:"The selection data"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"selectionRegion"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HighlightArea"})}),(0,r.jsx)(n.td,{children:"The area represents the entire selected region"}),(0,r.jsx)(n.td,{children:"1.0.0"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"To make it simple, we just show a textarea for user to enter the note's message:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Store the current note\'s message\r\nconst [message, setMessage] = React.useState("");\r\n\r\nconst renderHighlightContent = (props: RenderHighlightContentProps) => {\r\n  const addNote = () => {\r\n    // We will implement it later\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        background: "#fff",\r\n        border: "1px solid rgba(0, 0, 0, .3)",\r\n        borderRadius: "2px",\r\n        padding: "8px",\r\n        position: "absolute",\r\n        left: `${props.selectionRegion.left}%`,\r\n        top: `${props.selectionRegion.top + props.selectionRegion.height}%`,\r\n        zIndex: 1,\r\n      }}\r\n    >\r\n      <div>\r\n        <textarea\r\n          rows={3}\r\n          style={{\r\n            border: "1px solid rgba(0, 0, 0, .3)",\r\n          }}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        ></textarea>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: "flex",\r\n          marginTop: "8px",\r\n        }}\r\n      >\r\n        <div style={{ marginRight: "8px" }}>\r\n          <PrimaryButton onClick={addNote}>Add</PrimaryButton>\r\n        </div>\r\n        <Button onClick={props.cancel}>Cancel</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Clicking the ",(0,r.jsx)(n.em,{children:"Add"})," button will call the ",(0,r.jsx)(n.code,{children:"addNote"})," function. In addition to track the current ",(0,r.jsx)(n.code,{children:"message"}),", we also need to store the list of notes, and the latest ",(0,r.jsx)(n.code,{children:"id"})," for note.\r\nIn reality, you might store and load notes from the database. In our example, the note's ",(0,r.jsx)(n.code,{children:"id"})," is generated manually."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const [notes, setNotes] = React.useState<Note[]>([]);\r\nlet noteId = notes.length;\n"})}),"\n",(0,r.jsx)(n.p,{children:"The function to add a note is quite simple:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const renderHighlightContent = (props: RenderHighlightContentProps) => {\r\n  const addNote = () => {\r\n    // Only add message if it\'s not empty\r\n    if (message !== "") {\r\n      const note: Note = {\r\n        // Increase the id manually\r\n        id: ++noteId,\r\n        content: message,\r\n        highlightAreas: props.highlightAreas,\r\n        quote: props.selectedText,\r\n      };\r\n      setNotes(notes.concat([note]));\r\n\r\n      // Close the form\r\n      props.cancel();\r\n    }\r\n  };\r\n};\n'})}),"\n",(0,r.jsx)(n.h2,{id:"renderhighlights",children:"renderHighlights"}),"\n",(0,r.jsxs)(n.p,{children:["The highlight areas now are ready in the local state of component. It is the time to display them via the ",(0,r.jsx)(n.code,{children:"renderHighlights"})," prop.\r\n",(0,r.jsx)(n.code,{children:"renderHighlights"})," provides the following properties:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"PROPERTY"}),(0,r.jsx)(n.th,{children:"TYPE"}),(0,r.jsx)(n.th,{children:"DESCRIPTION"}),(0,r.jsx)(n.th,{children:"FROM"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"getCssProperties"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Function"})}),(0,r.jsx)(n.td,{children:"Returns the CSS styles used to position a highlight area on pages"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"pageIndex"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The page index of highlight area"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rotation"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The current number of rotated degrees of the document"}),(0,r.jsx)(n.td,{children:"1.0.0"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"getCssProperties"})," function has the signature of"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"(area: HighlightArea, rotation: number) => React.CSSProperties;\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"PARAMETER"}),(0,r.jsx)(n.th,{children:"TYPE"}),(0,r.jsx)(n.th,{children:"DESCRIPTION"}),(0,r.jsx)(n.th,{children:"FROM"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"area"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HighlightArea"})}),(0,r.jsx)(n.td,{children:"The highlight area"}),(0,r.jsx)(n.td,{children:"1.0.0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rotation"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"The current number of rotated degrees of the document"}),(0,r.jsx)(n.td,{children:"1.0.0"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"rotation"})," parameter ensures that the highlight area is positioned properly even if user ",(0,r.jsx)(n.a,{href:"/docs/ui/sse-pdf-viewer/plugin/rotate",children:"rotates"})," the document.\r\nListing all highlights on page is simple as following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const renderHighlights = (props: RenderHighlightsProps) => (\r\n  <div>\r\n    {notes.map((note) => (\r\n      <React.Fragment key={note.id}>\r\n        {note.highlightAreas\r\n          // Filter all highlights on the current page\r\n          .filter((area) => area.pageIndex === props.pageIndex)\r\n          .map((area, idx) => (\r\n            <div\r\n              key={idx}\r\n              style={Object.assign(\r\n                {},\r\n                {\r\n                  background: "yellow",\r\n                  opacity: 0.4,\r\n                },\r\n                props.getCssProperties(area, props.rotation)\r\n              )}\r\n            />\r\n          ))}\r\n      </React.Fragment>\r\n    ))}\r\n  </div>\r\n);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"display-notes-in-a-sidebar",children:"Display notes in a sidebar"}),"\n",(0,r.jsx)(n.p,{children:"We would like to list notes in a sidebar. The markup of sidebar and viewer look like as following"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'<div\r\n  style={{\r\n    border: "1px solid rgba(0, 0, 0, 0.3)",\r\n    display: "flex",\r\n    height: "100%",\r\n    overflow: "hidden",\r\n  }}\r\n>\r\n  <div\r\n    style={{\r\n      borderRight: "1px solid rgba(0, 0, 0, 0.3)",\r\n      width: "25%",\r\n      overflow: "auto",\r\n    }}\r\n  >\r\n    Sidebar\r\n  </div>\r\n  <div\r\n    style={{\r\n      flex: "1 1 0",\r\n    }}\r\n  >\r\n    Viewer\r\n  </div>\r\n</div>\n'})}),"\n",(0,r.jsx)(n.p,{children:"Now we can loop over the notes and display one by one:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const sidebarNotes = (\r\n  <>\r\n    {notes.length === 0 && <div>There is no note</div>}\r\n    {notes.map((note) => {\r\n      return (\r\n        <div key={note.id}>\r\n          <blockquote>{note.quote}</blockquote>\r\n          {note.content}\r\n        </div>\r\n      );\r\n    })}\r\n  </>\r\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"jump-to-a-highlight-area-when-clicking-a-note",children:"Jump to a highlight area when clicking a note"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"highlightPluginInstance"})," created by the ",(0,r.jsx)(n.code,{children:"highlightPlugin()"})," function provides a method for that purpose."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { jumpToHighlightArea } = highlightPluginInstance;\r\n\r\nconst sidebarNotes = (\r\n  <>\r\n    {notes.map((note) => {\r\n      return (\r\n        <div\r\n          key={note.id}\r\n          // Jump to the associated highlight area\r\n          onClick={() => jumpToHighlightArea(note.highlightAreas[0])}\r\n        >\r\n          ...\r\n        </div>\r\n      );\r\n    })}\r\n  </>\r\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"jump-to-a-note-in-sidebar-when-clicking-its-highlight-area",children:"Jump to a note in sidebar when clicking its highlight area"}),"\n",(0,r.jsxs)(n.p,{children:["To do that, we need to keep the relationship between a note's ",(0,r.jsx)(n.code,{children:"id"})," and its note element in the sidebar."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const noteEles: Map<number, HTMLElement> = new Map();\n"})}),"\n",(0,r.jsx)(n.p,{children:"The map will be updated when a highlight is rendered:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const renderHighlights = (props: RenderHighlightsProps) => (\r\n  <div>\r\n    {notes.map((note) => (\r\n      <React.Fragment key={note.id}>\r\n        {note.highlightAreas\r\n          .filter((area) => area.pageIndex === props.pageIndex)\r\n          .map((area, idx) => (\r\n            <div\r\n              // We will implement `jumpToNote` later\r\n              onClick={() => jumpToNote(note)}\r\n              ref={(ref): void => {\r\n                // Update the map\r\n                noteEles.set(note.id, ref as HTMLElement);\r\n              }}\r\n            />\r\n          ))}\r\n      </React.Fragment>\r\n    ))}\r\n  </div>\r\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Clicking a highlight will jump to its note in the sidebar:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const jumpToNote = (note: Note) => {\r\n  if (noteEles.has(note.id)) {\r\n    noteEles.get(note.id).scrollIntoView();\r\n  }\r\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"integrate-with-default-layout-plugin",children:"Integrate with Default Layout plugin"}),"\n",(0,r.jsxs)(n.p,{children:["This section introduces the steps to integrate the highlight with ",(0,r.jsx)(n.a,{href:"/docs/ui/sse-pdf-viewer/plugin/default-layout",children:"default-layout plugin"}),".\r\nIn order to move the list of notes into the sidebar, we create a new tab for the sidebar:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { defaultLayoutPlugin } from "@sse-ui/pdf-default-layout";\r\nimport { MessageIcon } from "@sse-ui/pdf-highlight";\r\n\r\nconst defaultLayoutPluginInstance = defaultLayoutPlugin({\r\n  sidebarTabs: (defaultTabs) =>\r\n    defaultTabs.concat({\r\n      content: sidebarNotes,\r\n      icon: <MessageIcon />,\r\n      title: "Notes",\r\n    }),\r\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"sidebarTabs"})," propety defines the list of tabs that will be shown in the sidebar. It is a function taking the default tabs, and returns the list of tabs.\r\nIn our specific example, the tab showing all notes is the last one."]}),"\n",(0,r.jsx)(n.h2,{id:"open-the-tab-when-clicking-a-highlight",children:"Open the tab when clicking a highlight"}),"\n",(0,r.jsx)(n.p,{children:"As mentioned in the previous section, clicking a highlight area will jump to the associated note in the sidebar.\r\nSince the tab listing all notes can be closed, we have to open the tab first to make sure the notes visible:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { activateTab } = defaultLayoutPluginInstance;\r\n\r\nconst jumpToNote = (note: Note) => {\r\n  // Open the tab\r\n  activateTab(3);\r\n\r\n  // Jump to the note\r\n  // ...\r\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"activateTab"})," function accepts the index of tab that you want to open. Our specific example has four tabs, and the tab showing all notes is the last one."]}),"\n",(0,r.jsx)(n.h2,{id:"clear-the-notes-when-opening-other-document",children:"Clear the notes when opening other document"}),"\n",(0,r.jsxs)(n.p,{children:["The last but not least thing is do not forget to reset (or load new notes) when user opens new document. We can do it by handling the ",(0,r.jsx)(n.code,{children:"onDocumentLoad"})," event:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const [currentDoc, setCurrentDoc] =\r\n  (React.useState < PdfJs.PdfDocument) | (null > null);\r\n\r\nconst handleDocumentLoad = (e: DocumentLoadEvent) => {\r\n  setCurrentDoc(e.doc);\r\n  if (currentDoc && currentDoc !== e.doc) {\r\n    // User opens new document\r\n    setNotes([]);\r\n  }\r\n};\r\n\r\n<Viewer onDocumentLoad={handleDocumentLoad} />;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react-pdf-viewer.dev/examples/render-the-highlight-areas/",children:"Render the highlight areas"})}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>h,x:()=>l});var r=t(6540);const i={},s=r.createContext(i);function h(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:h(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);